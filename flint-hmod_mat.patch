--- ./hmod_mat/hmod_mat.h.orig	2014-03-28 06:24:19.000000000 -0600
+++ ./hmod_mat/hmod_mat.h	2015-09-21 20:27:10.652775389 -0600
@@ -27,10 +27,7 @@
 #ifndef HMOD_MAT_H
 #define HMOD_MAT_H
 
-#undef ulong /* interferes with system includes */
 #include <stdlib.h>
-#define ulong unsigned long
-
 #include <gmp.h>
 #include "flint.h"
 #include "longlong.h"
@@ -41,7 +38,11 @@
  extern "C" {
 #endif
 
+#ifdef FLINT64
 typedef unsigned int hlimb_t;
+#else
+typedef unsigned short hlimb_t;
+#endif
 
 static __inline__ mp_limb_t hmod_randmod(flint_rand_t state)
 {
@@ -92,13 +93,13 @@ static __inline__ void _hmod_vec_scalar_
 }
 
 /* right now we only care about this case */
-static __inline__ int _hmod_vec_dot_bound_limbs(long len, nmod_t mod)
+static __inline__ int _hmod_vec_dot_bound_limbs(long len __attribute__((unused)), nmod_t mod __attribute__((unused)))
 {
     return 2;
 }
 
 static __inline__ hlimb_t
-_hmod_vec_dot(const hlimb_t * vec1, const hlimb_t * vec2, long len, nmod_t mod, int nlimbs)
+_hmod_vec_dot(const hlimb_t * vec1, const hlimb_t * vec2, long len, nmod_t mod, int nlimbs __attribute__((unused)))
 {
     hlimb_t res;
     long i;
@@ -117,7 +118,7 @@ _hmod_vec_dot(const hlimb_t * vec1, cons
 }
 
 static __inline__ hlimb_t
-_hmod_vec_dot_ptr(const hlimb_t * vec1, hlimb_t ** const vec2, long offset, long len, nmod_t mod, int nlimbs)
+_hmod_vec_dot_ptr(const hlimb_t * vec1, hlimb_t ** const vec2, long offset, long len, nmod_t mod, int nlimbs __attribute__((unused)))
 {
     hlimb_t res;
     long i;
